shortest
common
supersequ
problem
ask
obtain
shortest
string
supersequ
everi
member
given
set
string
applic
among
other
data
compress
oligonucleotid
microarray
product
problem
nphard
exist
exact
solut
impract
larg
instanc
paper
new
beam
search
algorithm
propos
problem
employ
probabilist
heurist
use
domin
properti
prune
search
space
propos
algorithm
compar
three
recent
algorithm
propos
problem
random
biolog
sequenc
outperform
quickli
provid
solut
higher
averag
qualiti
experiment
case
java
sourc
binari
file
propos
ibssc
algorithm
implement
dr
algorithm
random
real
dataset
use
paper
freeli
avail
upon
request
shortest
common
supersequ
sc
problem
ask
obtain
shortest
string
supersequ
everi
member
given
set
string
supersequ
given
string
string
obtain
insert
zero
charact
anywher
given
string
among
variou
applic
problem
data
compress
storer
timkovskii
ai
plan
foulser
et
al
queri
optim
databas
chaudhuri
bruno
selli
bioinformat
particularli
dna
oligonucleotid
microarray
product
hubbel
et
al
kasif
et
al
ning
et
al
rahmann
sankoff
kruskal
microarray
preciou
tool
success
use
among
other
gene
cluster
identif
snp
detect
fusion
transcript
detect
ning
et
al
rahmann
skotheim
et
al
two
wellknown
type
microarray
cdna
oligonucleotid
microarray
kasif
et
al
ning
et
al
latter
known
higher
sensit
due
lower
crosshybrid
possibl
kasif
et
al
ning
et
al
oligonucleotid
microarray
usual
manufactur
photolithograph
method
method
involv
sever
synthesi
step
append
nucleotid
correspond
letter
c
g
sever
design
probe
sinc
process
accomplish
mean
light
exposur
probe
receiv
nucleotid
protect
mask
sequenc
nucleotid
use
synthesi
step
call
deposit
string
whose
length
determin
number
synthesi
step
sever
reason
desir
keep
deposit
string
short
possibl
kasif
et
al
ning
et
al
rahmann
first
mask
synthesi
step
expens
even
small
reduct
length
deposit
string
could
lead
signific
reduct
product
cost
rahmann
second
total
manufactur
time
increas
number
synthesi
step
rais
third
exist
possibl
error
microarray
fabric
mask
task
perfect
probabl
mask
probe
expos
light
nonzero
consequ
probabl
fabric
error
usual
increas
number
synthesi
step
rais
therefor
shorter
deposit
sequenc
desir
reduc
manufactur
cost
time
error
hand
deposit
sequenc
common
supersequ
underli
probe
motiv
design
high
qualiti
algorithm
sc
problem
fig
illustr
use
shorter
deposit
sequenc
lead
fewer
synthesi
step
henc
reduc
product
cost
time
error
sc
problem
optim
solv
polynomi
time
fix
number
input
string
nphard
gener
maier
consequ
highli
unlik
obtain
polynomialtim
exact
algorithm
problem
unless
garey
johnson
exact
algorithm
propos
problem
includ
dynam
program
algorithm
jiang
li
branch
bound
algorithm
fraser
exponenti
former
number
string
latter
size
correspond
alphabet
therefor
algorithm
especi
benefici
respect
number
string
alphabet
size
restrict
research
aim
devis
approxim
meta
heurist
algorithm
achiev
good
necessarili
optim
solut
accept
time
approxim
algorithm
sc
includ
alphabet
baron
et
al
approxim
n
algorithm
nicosia
oriolo
reduceexpand
baron
et
al
deposit
reduct
dr
ning
leong
approxim
ratio
algorithm
alphabet
reduceexpand
dr
appeal
algorithm
dr
fact
trivial
combin
heurist
mechan
alphabet
therefor
guarante
approxim
ratio
approxim
n
algorithm
provid
approxim
ratio
fix
particularli
experi
nicosia
oriolo
howev
algorithm
effici
ie
polynomi
time
complex
size
search
tree
grow
exponenti
size
given
problem
instanc
among
meta
heurist
algorithm
sc
tournament
greedi
irv
fraser
major
merg
brank
et
al
algorithm
base
genet
algorithm
brank
middendorf
brank
et
al
ant
system
ant
coloni
optim
michel
middendorf
michel
middendorf
minheight
sumheight
kasif
et
al
latter
two
specif
propos
dna
sequenc
recent
metaheurist
algorithm
includ
hybrid
memet
algorithm
beam
search
call
hybrid
mab
simpli
refer
mab
random
beam
search
call
probabilist
beam
search
pb
blum
et
al
anoth
recent
algorithm
poem
togeth
variant
poemsf
poemsfw
also
propos
kubalik
howev
report
kubalik
outperform
mab
experiment
case
base
result
report
blum
et
al
pb
outperform
mab
experiment
case
hand
dr
outperform
alphabet
tournament
greedi
major
merg
experiment
case
report
ning
leong
dr
also
outperform
reduceexpand
string
length
ning
leong
howev
comparison
dr
pb
yet
made
leav
unclear
one
stateoftheart
time
complex
dr
specifi
ning
leong
nm
n
respect
size
alphabet
number
string
maximum
length
string
complex
pb
hybrid
mab
report
propos
paper
blum
et
al
paper
provid
improv
beam
search
algorithm
call
ibssc
sc
problem
averag
outperform
three
recent
algorithm
name
dr
mab
pb
experiment
case
similar
approach
success
use
longest
common
subsequ
lc
problem
mousavi
tabataba
propos
ibssc
algorithm
inspir
blum
et
al
pb
algorithm
follow
distinct
characterist
first
employ
differ
probabilitybas
heurist
function
one
use
pb
use
dynam
program
polynomi
time
space
cost
array
probabilist
valu
popul
facilit
calcul
heurist
valu
second
use
techniqu
call
domin
prune
search
tree
domin
prune
techniqu
inspir
easton
singireddi
blum
et
al
use
purpos
lc
problem
howev
usag
techniqu
differ
easton
singireddi
blum
et
al
precis
blum
et
al
candid
solut
check
domin
everi
exist
candid
solut
rather
timeconsum
hand
easton
singireddi
bestsofar
solut
use
potenti
domin
new
candid
solut
algorithm
use
k
bestsofar
solut
purpos
k
control
paramet
algorithm
approach
give
us
control
achiev
good
amount
prune
reason
time
final
given
beam
size
pb
work
ibssc
impli
ibssc
benefit
larger
beam
size
pb
given
amount
execut
time
ibssc
algorithm
outperform
pb
experiment
case
report
paper
also
outperform
mab
provid
solut
higher
averag
qualiti
experiment
case
includ
case
pb
outperform
mab
report
blum
et
al
final
ibssc
outperform
dr
experiment
case
set
base
experi
conduct
ning
leong
dr
algorithm
consist
two
stage
call
deposit
reduct
deposit
stage
number
candid
supersequ
creat
tri
improv
reduct
stage
use
alphabet
variant
major
merg
deposit
stage
gener
candid
supersequ
fact
use
alphabet
make
dr
approxim
algorithm
guarante
approxim
ratio
p
dr
algorithm
determinist
use
random
tie
brake
rest
logic
determinist
propos
algorithm
ibssc
scalabl
time
complex
polynomi
input
size
comput
cost
arbitrarili
reduc
reduc
beam
size
heurist
function
use
algorithm
evalu
candid
solut
suffer
scalabl
issu
heurist
propos
mousavi
tabataba
estim
mechan
use
long
string
algorithm
significantli
faster
recent
algorithm
sc
yield
superior
solut
qualiti
case
propos
algorithm
scalabl
suffici
fast
compar
recent
algorithm
sc
main
concentr
report
experiment
result
solut
qualiti
ie
length
return
supersequ
rest
paper
organ
follow
section
provid
basic
notat
definit
use
paper
section
describ
candid
solut
evalu
compar
use
employ
heurist
function
propos
algorithm
togeth
complex
analysi
present
section
section
report
experiment
result
section
conclud
paper
let
string
length
denot
length
use
k
k
integ
inclus
denot
kth
charact
also
use
k
k
rk
indic
substr
obtain
remov
first
k
charact
last
k
charact
let
two
string
n
ir
n
r
n
set
integ
greater
zero
say
supersequ
write
exist
monoton
increas
total
function
g
call
function
g
map
note
map
necessarili
uniqu
everi
string
consid
supersequ
null
string
ie
string
zero
length
final
say
subsequ
supersequ
let
x
string
n
nonempti
set
n
string
alphabet
write
x
x
shortest
common
supersequ
sc
problem
defin
given
input
set
string
obtain
string
x
minimum
length
x
input
string
mean
string
sinc
sc
effici
solv
assum
use
mean
assum
ng
use
denot
max
ng
fm
g
candid
solut
string
use
possibl
index
x
denot
candid
solut
candid
solut
x
call
feasibl
x
otherwis
call
infeas
feasibl
candid
solut
x
optim
feasibl
solut
shorter
length
exist
let
x
candid
solut
use
p
x
denot
maximum
possibl
integ
k
k
x
r
x
mean
string
obtain
delet
first
p
x
charact
see
fig
r
x
defin
set
r
x
n
random
string
mean
string
charact
obtain
select
uniformli
random
one
charact
final
use
pr
denot
statist
probabl
function
although
two
type
beam
search
name
construct
perturb
local
search
use
beam
search
paper
refer
former
section
explain
candid
solut
evalu
compar
method
use
evalu
candid
solut
adapt
mousavi
tabataba
similar
problem
lc
address
evalu
candid
solut
x
use
probabl
r
x
random
string
string
r
x
assum
independ
sens
j
j
ng
j
intuit
heurist
function
candid
solut
x
like
superior
anoth
candid
solut
x
length
given
random
string
length
k
x
like
x
common
supersequ
input
string
x
indic
string
obtain
append
end
x
cours
probabl
r
x
depend
candid
solut
x
extrem
case
x
supersequ
input
string
ie
x
probabl
r
x
would
includ
null
string
valu
p
x
string
r
x
illustr
three
input
string
candid
infeas
solut
cata
anoth
extrem
x
null
string
becom
probabl
random
string
supersequ
input
string
rule
thumb
higher
valu
pr
r
x
expect
longer
random
string
although
necessarili
hold
use
h
k
x
denot
heurist
valu
candid
solut
x
use
subscript
k
emphasi
depend
heurist
valu
length
k
random
string
cours
k
less
length
longest
string
r
x
heurist
valu
ie
probabl
r
x
zero
fair
comparison
candid
solut
use
valu
k
evalu
candid
solut
compar
formula
use
determin
k
present
section
show
calcul
heurist
valu
theorem
let
r
string
length
q
random
string
length
k
proof
first
note
third
case
otherwis
case
oqrk
string
r
q
k
welldefin
definit
supersequ
everi
string
supersequ
null
string
string
supersequ
longer
one
therefor
first
two
case
hold
trivial
remain
case
oqrk
string
r
least
length
r
exist
depend
whether
charact
r
equal
exactli
one
follow
two
case
hold
case
prove
r
r
q
k
end
use
follow
properti
refer
concaten
properti
direct
assum
r
q
k
show
r
q
q
q
concaten
q
q
r
direct
assum
r
show
r
q
k
r
definit
supersequ
total
monoton
increas
function
g
q
k
r
g
q
two
possibl
case
either
g
g
either
case
g
q
note
g
monoton
increas
let
g
total
function
k
defin
g
cours
g
also
monoton
increas
let
r
denot
respect
r
q
k
r
therefor
supersequ
r
use
map
mean
supersequ
r
use
map
g
direct
assum
r
show
r
r
q
e
r
q
e
concaten
r
q
r
onlyif
direct
assum
r
show
r
q
r
total
monoton
increas
function
g
q
k
r
g
q
howev
g
r
ay
therefor
g
q
note
g
monoton
increas
let
g
total
function
q
defin
g
q
cours
g
also
monoton
increas
let
denot
k
therefor
q
definit
g
supersequ
r
use
map
mean
supersequ
r
use
map
g
r
k
far
shown
hand
random
string
base
uniform
probabl
distribut
probabl
case
consequ
probabl
case
ii
therefor
proposit
given
candid
solut
x
posit
integ
k
heurist
valu
candid
solut
x
calcul
random
string
length
k
proof
definit
heurist
function
h
k
x
r
x
random
string
length
k
assum
j
j
ng
aj
therefor
let
c
set
candid
solut
compar
use
formula
max
ng
x
c
fr
determin
valu
k
use
fact
greater
alphabet
size
longer
string
r
x
usual
correspond
longer
supersequ
howev
determin
best
valu
k
requir
investig
remain
open
question
section
propos
algorithm
ibssc
propos
construct
beam
search
metaheurist
algorithm
standard
beam
search
algorithm
determinist
heurist
tree
search
similar
breadthfirst
search
sens
increment
construct
partial
solut
explor
search
tree
one
level
time
howev
contrari
breadthfirst
search
keep
candid
solut
maximum
number
candid
solut
keep
call
beam
size
denot
b
inform
speak
extrem
case
beam
size
suffici
larg
algorithm
act
breadthfirst
search
anoth
extrem
case
beam
size
case
act
pure
greedi
algorithm
beam
search
algorithm
also
similar
bestfirst
search
sens
also
use
heurist
function
evalu
compar
candid
solut
final
exist
scalabl
issu
describ
heurist
function
larg
problem
instanc
precis
probabl
pr
r
decreas
rapidli
length
r
becom
close
length
especi
r
long
string
overcom
issu
estim
p
q
k
p
q
cut
cut
cut
dynam
determin
way
q
cut
posit
either
less
close
possibl
approxim
overcom
scalabl
issu
heurist
function
make
algorithm
suffici
robust
long
biolog
sequenc
algorithm
present
highlevel
pseudocod
propos
ibssc
algorithm
sc
beam
search
algorithm
start
initiallysingleton
null
string
set
b
candid
solut
increment
build
longer
one
append
alphabet
charact
alphabet
feasibl
candid
solut
obtain
feasibl
solut
return
algorithm
termin
howev
b
best
candid
solut
kept
use
heurist
function
other
elimin
algorithm
consist
initi
section
follow
loop
consist
four
step
initi
section
algorithm
construct
effici
data
structur
speed
calcul
heurist
valu
core
idea
behind
use
data
structur
properti
heurist
function
h
k
describ
previou
section
given
alphabet
string
r
length
q
random
string
length
k
probabl
r
depend
q
k
see
theorem
therefor
construct
twodimension
array
p
p
q
k
hold
probabl
pr
r
use
dynam
program
base
theorem
array
p
popul
follow
recurr
initi
section
set
b
candid
solut
also
initi
singleton
contain
null
string
complet
initi
section
loop
run
consist
four
step
step
candid
solut
x
b
extend
append
right
end
charact
drawn
obtain
new
candid
solut
algorithm
end
soon
feasibl
solut
determin
use
function
feasibl
obtain
everi
infeas
candid
solut
ad
set
c
provid
usabl
specif
candid
solut
x
new
obtain
append
charact
l
string
x
call
usabl
first
charact
least
one
string
r
x
n
l
check
function
usabl
algorithm
therefor
set
c
contain
b
infeas
yet
usabl
candid
solut
step
heurist
valu
candid
solut
c
comput
base
k
best
candid
solut
compris
list
kbestlist
potenti
domin
use
domin
prune
step
member
c
check
design
best
solut
decid
whether
domin
case
discard
c
candid
solut
x
k
domin
anoth
candid
solut
x
j
p
k
r
p
j
n
final
step
remain
candid
solut
c
compar
best
b
select
construct
new
set
b
candid
solut
propos
algorithm
run
polynomi
time
input
size
n
valu
paramet
b
k
algorithm
basic
ibssc
algorithm
sc
problem
input
n
string
least
one
charact
alphabet
charact
use
string
denot
output
string
x
proof
initi
section
loop
twodimension
array
p
popul
use
dynam
program
valu
entri
determin
term
two
entri
previou
row
column
seen
two
nest
loop
take
popul
array
maximum
valu
use
k
use
formula
k
max
ng
x
c
fr
determin
valu
k
see
step
insid
loop
therefor
array
p
popul
four
step
insid
loop
analyz
turn
step
consist
two
nest
loop
one
iter
b
time
iter
time
insid
loop
feasibl
check
use
function
feasibl
usabl
check
use
function
usabl
perform
feasibl
check
involv
check
whether
given
candid
solut
x
new
supersequ
input
string
keep
n
indic
p
x
associ
candid
solut
x
b
need
updat
indic
x
new
check
whether
p
x
new
n
recal
perform
n
usabl
check
return
true
p
x
new
x
n
also
perform
n
therefor
step
run
step
determin
heurist
valu
candid
solut
c
number
candid
solut
x
c
loop
iter
n
time
use
array
p
probabl
valu
ie
r
x
determin
insid
loop
multipli
togeth
make
heurist
valu
h
k
x
candid
solut
x
therefor
step
requir
step
step
first
determin
k
best
solut
c
store
kbestlist
examin
member
c
design
best
solut
domin
prune
recal
b
candid
solut
c
therefor
determin
kbestlist
perform
check
whether
candid
solut
c
domin
member
kbestlist
perform
n
henc
domin
check
perform
therefor
total
complex
step
step
select
best
atmost
b
member
c
construct
new
b
also
perform
use
redblack
tree
therefor
step
insid
loop
perform
initi
section
run
loop
iter
l
n
time
whole
algorithm
run
l
n
complet
proof
note
time
complex
algorithm
polynomi
input
size
n
also
note
l
n
nm
recal
length
longest
input
string
inform
speakingeach
charact
candid
solut
must
contribut
cover
charact
least
one
input
string
total
n
charact
therefor
time
complex
algorithm
may
also
present
n
although
provid
tight
bound
determin
appropri
valu
paramet
k
b
depend
underli
problem
particular
larger
beam
size
b
usual
necessarili
correspond
accur
solut
greater
comput
cost
howev
solut
qualiti
use
specif
beam
size
near
optim
valu
much
point
increas
beam
size
hand
use
small
beam
size
may
advers
affect
solut
qualiti
fact
depend
underli
problem
instanc
factor
level
accuraci
requir
much
runtim
afford
similarli
strict
rule
determin
best
valu
k
larger
k
correspond
comput
time
spent
domin
prune
howev
prune
lead
reduct
comput
cost
would
otherwis
requir
process
prune
sub
tree
section
report
result
compar
propos
algorithm
dr
ning
leong
mab
pb
blum
et
al
three
recent
algorithm
propos
sc
problem
although
algorithm
propos
literatur
mention
earlier
paper
compar
algorithm
signific
alreadi
shown
outperform
three
recent
algorithm
report
ning
leong
gallardo
et
al
blum
et
al
implement
dr
mab
pb
avail
whole
dataset
use
gallardo
et
al
blum
et
al
avail
use
report
result
gallardo
et
al
blum
et
al
compar
algorithm
mab
pb
howev
real
instanc
use
ning
leong
avail
http
wwwbiomedcentralcom
http
www
zip
random
instanc
use
random
instanc
gener
http
wwwpersonalumichedu
kningrandomhtml
compar
ibssc
dr
random
instanc
implement
dr
precis
base
specif
ning
leong
implement
dr
ibssc
java
use
eclips
platform
pentium
iv
machin
ghz
clock
speed
gb
ram
mb
cach
allow
java
use
gb
ram
order
compar
ibssc
dr
random
instanc
gener
exactli
valu
paramet
n
use
ning
leong
altogeth
sixteen
problem
instanc
first
eight
rel
smaller
number
length
string
correspond
tabl
eight
correspond
tabl
ning
leong
real
instanc
dna
protein
instanc
use
respect
tabl
ning
leong
altogeth
dataset
first
six
dna
five
protein
sequenc
dataset
includ
ten
instanc
import
note
sequenc
real
data
charact
noutsid
underli
alphabet
charact
randomli
replac
one
candid
charact
ran
ibssc
paramet
ran
implement
dr
random
instanc
use
report
result
ning
leong
real
instanc
tabl
provid
comparison
ibssc
dr
random
dna
sequenc
first
second
column
show
respect
number
length
sequenc
problem
instanc
row
tabl
correspond
ten
problem
instanc
specifi
n
third
fourth
column
report
averag
length
string
return
dr
ibssc
respect
ten
instanc
row
fifth
column
report
averag
runtim
ibssc
includ
time
need
read
data
file
final
last
column
calcul
averag
reduct
percentag
r
length
string
ibssc
defin
r
l
dr
l
ibssc
l
dr
l
dr
l
ibssc
denot
averag
length
string
return
dr
ibssc
respect
seen
tabl
ibssc
outperform
dr
achiev
shorter
string
sixteen
case
reduct
percentag
r
vari
case
n
case
n
averag
shown
tabl
complet
runtim
report
provid
ning
leong
mention
dr
took
less
random
instanc
n
averag
min
random
instanc
n
runtim
effici
implement
dr
observ
two
case
min
respect
howev
runtim
ibssc
correspond
instanc
less
two
minut
suggest
ibssc
significantli
faster
dr
import
note
dr
observ
take
h
last
instanc
n
runtim
report
ning
leong
time
taken
ibssc
instanc
less
min
fig
depict
growth
runtim
implement
dr
ibssc
number
string
n
fix
sequenc
length
implement
dr
ibssc
algorithm
avail
request
tabl
provid
comparison
ibssc
dr
real
biolog
sequenc
first
column
tabl
repres
dataset
name
definit
second
seventh
column
first
sixth
column
tabl
indic
tabl
ibssc
outperform
dr
obtain
shorter
string
eleven
case
reduct
percentag
r
rang
averag
shown
tabl
ibssc
observ
significantli
faster
dr
interest
observ
reduct
percentag
gain
ibssc
significantli
higher
real
random
biolog
sequenc
minimum
r
real
instanc
alreadyment
averag
r
random
instanc
indic
ibssc
promis
practic
use
research
purpos
compar
algorithm
pb
mab
use
random
real
instanc
use
blum
et
al
dataset
consist
one
random
five
biolog
benchmark
random
dataset
categor
class
specifi
differ
alphabet
size
name
tabl
comparison
ibssc
dr
random
dna
dataset
henc
row
correspond
dataset
ten
random
problem
instanc
averag
length
solut
report
algorithm
ibssc
run
paramet
runtim
second
ibssc
improv
percentag
r
also
report
last
two
column
improv
percentag
obtain
ibssc
defin
reduct
percentag
averag
length
solut
total
sixteen
dataset
first
eight
contain
rel
small
instanc
specif
ie
number
n
length
string
tabl
ning
leong
eight
dataset
specif
tabl
ning
leong
seen
ibssc
outperform
dr
provid
solut
higher
qualiti
ie
shorter
length
sixteen
case
tabl
dataset
number
string
n
ibssc
run
paramet
tabl
comparison
ibssc
dr
real
dna
protein
sequenc
dna
instanc
protein
instanc
dataset
use
tabl
ning
leong
whose
name
specifi
first
column
row
correspond
ten
instanc
averag
length
solut
return
algorithm
report
ibssc
run
paramet
runtim
second
ibssc
improv
percentag
r
also
report
improv
percentag
defin
reduct
percentag
averag
length
solut
obtain
ibssc
total
dataset
first
six
dna
protein
sequenc
result
dr
directli
taken
tabl
ning
leong
seen
ibssc
outperform
dr
obtain
higher
qualiti
solut
eleven
case
class
contain
five
instanc
instanc
consist
eight
string
four
length
four
length
hand
biolog
instanc
character
biolog
sequenc
probabl
p
specif
string
within
instanc
obtain
biolog
sequenc
remov
symbol
fix
probabl
p
number
string
instanc
five
biolog
sequenc
three
probabl
use
construct
total
instanc
five
biolog
sequenc
two
sar
coronaviru
dna
sequenc
obtain
genom
databas
http
gelymedutwsarsgenomeshtml
three
protein
sequenc
obtain
swissprot
http
wwwexpasyorgsprot
dna
sequenc
length
protein
sequenc
oxytocin
estrogen
length
respect
length
optim
scss
instanc
respect
blum
et
al
mab
pb
use
report
result
blum
et
al
contrari
ibssc
mab
pb
determinist
run
blum
et
al
best
mean
standard
deviat
solut
qualiti
runtim
report
howev
ran
ibssc
instanc
use
random
real
instanc
tabl
compar
ibssc
mab
pb
random
dataset
first
column
show
alphabet
size
second
third
column
show
length
solut
return
mab
pb
respect
fourth
column
report
length
solut
return
ibssc
fifth
column
report
averag
runtim
ibssc
final
last
column
calcul
reduct
percentag
r
achiev
ibssc
respect
pb
almost
superior
mab
defin
r
l
pb
ibssc
l
pb
l
pb
l
ibssc
denot
averag
length
solut
return
pb
ibssc
respect
seen
tabl
five
case
ibssc
outperform
mab
pb
even
respect
best
run
intend
provid
precis
runtim
comparison
use
differ
machin
howev
infer
ibssc
slower
two
algorithm
runtim
limit
pb
mab
report
blum
et
al
gallardo
et
al
respect
wherea
longest
runtim
ibssc
last
row
tabl
note
smaller
beam
size
longest
runtim
algorithm
even
less
shown
tabl
still
outperform
pb
five
case
final
seen
last
column
tabl
ibssc
achiev
reduct
percentag
pb
averag
note
mab
outperform
pb
respect
averag
length
solut
case
still
outperform
ibssc
case
result
experi
biolog
sequenc
report
tabl
first
column
tabl
show
valu
probabl
p
next
column
show
maximum
length
input
string
next
three
column
show
result
algorithm
mab
pb
ibssc
respect
last
column
show
runtim
ibssc
tabl
tabl
comparison
ibssc
mab
pb
random
instanc
five
differ
alphabet
size
first
column
five
instanc
instanc
consist
eight
string
henc
four
length
four
length
henc
recal
length
longest
input
string
instanc
exactli
random
instanc
use
blum
et
al
result
mab
pb
taken
blum
et
al
mab
pb
determinist
report
result
statist
valu
best
mean
standard
deviat
sever
run
instanc
averag
instanc
row
howev
ibssc
determinist
run
instanc
ibssc
run
paramet
runtim
ibssc
second
reduct
percentag
r
also
report
last
two
column
seen
five
case
ibssc
outperform
mab
pb
even
respect
best
run
tabl
comparison
ibssc
mab
pb
sar
dataset
henc
dataset
result
mab
pb
blum
et
al
first
column
show
p
probabl
letter
sequenc
delet
number
string
mab
pb
determinist
report
result
statist
valu
best
mean
standard
deviat
sever
run
instanc
howev
ibssc
determinist
run
instanc
ibssc
run
paramet
last
column
show
runtim
ibssc
second
seen
ibssc
obtain
optim
solut
within
case
blum
et
al
first
column
show
p
probabl
letter
sequenc
delet
number
string
mab
pb
determinist
report
result
statist
valu
best
mean
standard
deviat
sever
run
instanc
howev
ibssc
determinist
run
instanc
ibssc
run
paramet
last
column
show
runtim
ibssc
second
seen
ibssc
achiev
optim
solut
within
case
seen
tabl
mab
pb
obtain
optim
solut
last
two
dataset
tabl
last
dataset
tabl
pb
outperform
mab
howev
ibssc
obtain
optim
solut
case
tabl
shown
last
column
tabl
ibssc
need
worst
coupl
second
find
optim
solut
runtim
limit
report
gallardo
et
al
blum
et
al
respect
final
observ
perform
ibssc
vari
paramet
k
b
conduct
two
type
experi
dataset
tabl
first
seri
experi
use
valu
k
use
valu
b
use
result
case
refer
calcul
percentag
chang
due
use
valu
b
precis
valu
v
calcul
l
l
l
l
l
length
solut
obtain
use
respect
five
instanc
alphabet
size
tabl
averag
percentag
chang
five
instanc
alphabet
size
result
shown
tabl
first
column
tabl
show
alphabet
size
second
third
column
show
respect
averag
varianc
percentag
chang
due
use
oppos
five
instanc
valu
denot
v
respect
next
three
pair
column
report
respect
valu
beam
size
last
row
show
averag
valu
instanc
observ
tabl
result
much
sensit
specifi
beam
size
valu
averag
percentag
chang
major
case
also
observ
obviou
pattern
chang
result
beam
size
howev
averag
shown
last
row
tabl
worst
result
correspond
smallest
beam
size
averag
fig
depict
averag
percentag
chang
vari
beam
size
differ
valu
alphabet
size
seen
fig
curv
tend
fall
increas
beam
size
number
except
also
observ
eg
second
seri
experi
use
beam
size
differ
valu
paramet
k
similarli
use
result
case
refer
calcul
percentag
chang
due
use
valu
k
specif
valu
calcul
l
l
l
l
length
solut
obtain
use
respect
averag
percentag
chang
five
instanc
alphabet
size
result
present
tabl
layout
tabl
similar
tabl
except
result
tabl
present
differ
valu
k
oppos
b
shown
tabl
except
two
case
last
row
tabl
comparison
ibssc
mab
pb
oxytocin
dataset
henc
dataset
result
mab
pb
blum
et
al
first
column
show
p
probabl
letter
sequenc
delet
number
string
mab
pb
determinist
report
result
statist
valu
best
mean
standard
deviat
sever
run
instanc
howev
ibssc
determinist
run
instanc
ibssc
run
paramet
last
column
show
runtim
ibssc
second
ibssc
obtain
optim
solut
within
case
blum
et
al
first
column
show
p
probabl
letter
sequenc
delet
number
string
mab
pb
determinist
report
result
statist
valu
best
mean
standard
deviat
sever
run
instanc
howev
ibssc
determinist
run
instanc
tabl
averag
varianc
percentag
chang
length
return
solut
ibssc
differ
beam
size
fix
comparison
refer
beam
size
dataset
simul
biolog
sequenc
use
blum
et
al
also
use
tabl
better
observ
fig
show
averag
percentag
chang
vari
k
differ
valu
alphabet
size
seen
fig
curv
tend
fall
increas
k
although
still
except
eg
case
paper
determinist
heurist
algorithm
shortest
common
supersequ
problem
propos
algorithm
construct
beam
search
use
heurist
function
differ
alreadi
propos
literatur
sc
problem
algorithm
also
use
domin
properti
effect
prune
search
tree
howev
check
domin
respect
everi
exist
candid
solut
would
lead
signific
timeconsumpt
neither
restrict
use
best
solut
found
far
would
use
true
power
domin
prune
instead
select
k
best
solut
found
far
potenti
domin
candid
solut
iter
k
control
paramet
algorithm
propos
algorithm
compar
three
recent
algorithm
propos
problem
simul
real
biolog
sequenc
outperform
three
algorithm
experiment
case
justifi
propos
algorithm
promis
research
improv
possibl
avenu
futur
work
includ
devis
method
determin
appropri
valu
k
see
eq
proper
set
significantli
improv
solut
qualiti
enough
room
improv
regard
ii
gener
employ
heurist
case
input
string
correl
improv
perform
algorithm
domain
iii
dynam
determin
appropri
valu
control
paramet
k
b
ibssc
dataset
tabl
beam
size
beam
size
refer
paramet
k
fix
alphabet
size
separ
curv
shown
averag
varianc
v
chang
length
return
solut
ibssc
differ
valu
paramet
k
fix
beam
size
comparison
refer
valu
k
dataset
simul
biolog
sequenc
use
blum
et
al
also
use
tabl
tabl
valu
k
refer
fix
beam
size
use
curv
depict
alphabet
size
